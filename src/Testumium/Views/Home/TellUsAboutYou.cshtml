@model Testumium.Models.CreateTestViewModel

@section header {
    <script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

<div class="container p-b-4" id="creatOwnTest">
    <h2>Great, let’s test @Model.Domain.</h2>
    <form action="@Url.Action("TellUsAboutYou")" role="form" method="post">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger" style="display: block">
                <p>@TempData["ErrorMessage"]</p>
            </div>
        }
        @if (Model.TestType == Testumium.Domain.Data.TestType.Manual)
        {
            <p>We will call you as soon as possible. Please tell us more about yourself, and then we will call you soon.</p>
        }
        else
        {
            <p>Please tell us a bit about yourself.</p>
        }
        <div class="form-group">
            @Html.LabelFor(m => m.ContactName, "Name")
            @Html.TextBoxFor(m => m.ContactName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ContactName)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, "E-mail")
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Phone, "Phone number")
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Phone)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.WebsiteUrl, "Website Url")
            @Html.TextBoxFor(m => m.WebsiteUrl, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.WebsiteUrl)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Company)
            @Html.TextBoxFor(m => m.Company, new { @class = "form-control" })
        </div>
        @if (Model.TestType == Testumium.Domain.Data.TestType.Manual)
        {
        <div class="form-group">
            @Html.LabelFor(m => m.CallTime, "When is the best time to call?")
            @Html.TextBoxFor(m => m.CallTime, new { @class = "form-control" })
        </div>
        }
        <div class="form-group">
            @Html.LabelFor(m => m.Comments, "Any comments or questions")
            @Html.TextAreaFor(m => m.Comments, new { @class = "form-control" })
        </div>
        @Html.HiddenFor(m => m.Domain)
        @Html.HiddenFor(m => m.TestType)
        @Html.HiddenFor(m => m.TestList)
        <button type="submit" class="btn btn-primary">Create test and get started</button>
    </form>
</div>
